<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fort Kent NWS Alerts Test</title>
    <style>
    .alert-box {
      border-left: 5px solid;
      padding: 12px 15px;
      margin: 10px 0;
      border-radius: 4px;
      font-size: 1rem;
      line-height: 1.4;
      background-color: #f9f9f9;
    }
    .alert-minor { border-color: #ffcc00; background-color: #fff8e1; }
    .alert-moderate { border-color: #ffa726; background-color: #fff3e0; }
    .alert-severe { border-color: #ef5350; background-color: #fdecea; }
    .alert-extreme { border-color: #b71c1c; background-color: #fce4e4; }
    .alert-close {
      background: transparent;
      border: none;
      font-size: 1.2rem;
      font-weight: bold;
      float: right;
      cursor: pointer;
    }
    .alert-toggle {
      background: none;
      border: none;
      color: #0056b3;
      text-decoration: underline;
      cursor: pointer;
      font-size: 0.9rem;
      margin-top: 6px;
      padding: 0;
    }
  </style>
  </head>
  <body>
    <h1>Fort Kent NWS Alerts Test</h1>
    <div id="weatherAlert">Loading alerts...</div>
    <script>
    async function fetchNWSAlerts() {
      const zone = "PAZ066"; // Northwest Aroostook County, Maine
      const apiURL = `https://api.weather.gov/alerts/active/zone/${zone}`;

      try {
        const response = await fetch(apiURL);
        const data = await response.json();
        const alertDiv = document.getElementById("weatherAlert");
        const storedDismissedIds = JSON.parse(localStorage.getItem("dismissedAlertIds") || "[]");

        if (data.features.length > 0) {
          alertDiv.innerHTML = "";

          data.features.forEach((feature) => {
            const alert = feature.properties;
            const alertId = feature.id;

            if (storedDismissedIds.includes(alertId)) return;

            const title = alert.headline;
            const description = alert.description;
            const severityRaw = alert.severity || "Unknown";
            const severity = severityRaw.toLowerCase();
            const link = alert.url || "https://www.weather.gov/car/";
            const updated = new Date(alert.sent).toLocaleString('en-US', {
              dateStyle: 'medium',
              timeStyle: 'short',
              timeZone: 'America/New_York'
            });

            const severityClass = {
              minor: "alert-minor",
              moderate: "alert-moderate",
              severe: "alert-severe",
              extreme: "alert-extreme"
            }[severity] || "alert-moderate";

            const shouldCollapse = description.length > 300 && !["severe", "extreme"].includes(severity);
            const shortText = description.slice(0, 300).trim() + "...";

            const alertBox = document.createElement("div");
            alertBox.className = `alert-box ${severityClass}`;
            alertBox.setAttribute("data-alert-id", alertId);
            alertBox.innerHTML = `
              <button class="alert-close" onclick="dismissAlert('${alertId}')" aria-label="Dismiss alert">&times;</button>
              <strong>⚠️ Weather Alert (${severityRaw === "Unknown" ? "Severity Unknown" : severityRaw}):</strong>
              <strong>${title}</strong>
              <div class="alert-description" id="desc-${alertId}">
                ${shouldCollapse ? shortText : description}
              </div>
              ${shouldCollapse ? `<button class="alert-toggle" onclick="toggleAlert('${alertId}', \`${description.replace(/`/g, "\\`")}\`)">Read more</button>` : ""}
              <div style="margin-top: 8px;">
                <a href="${link}" target="_blank" rel="noopener">View full alert from NWS</a>
              </div>
              <div style="margin-top: 6px; font-size: 0.9em; color: #555;">
                Last updated: ${updated}
              </div>
            `;
            alertDiv.appendChild(alertBox);
          });
        } else {
          alertDiv.innerHTML = "No active alerts at this time.";
        }
      } catch (error) {
        console.error("NWS Alert fetch error:", error);
        document.getElementById("weatherAlert").innerText = "Unable to load weather alerts.";
      }
    }

    function dismissAlert(alertId) {
      let dismissed = JSON.parse(localStorage.getItem("dismissedAlertIds") || "[]");
      if (!dismissed.includes(alertId)) {
        dismissed.push(alertId);
        localStorage.setItem("dismissedAlertIds", JSON.stringify(dismissed));
      }
      const alertBox = document.querySelector(`[data-alert-id="${alertId}"]`);
      if (alertBox) alertBox.style.display = 'none';
    }

    function toggleAlert(alertId, fullText) {
      const descEl = document.getElementById(`desc-${alertId}`);
      const btn = descEl.nextElementSibling;
      if (!btn) return;

      const isCollapsed = btn.textContent === "Read more";

      if (isCollapsed) {
        descEl.textContent = fullText;
        btn.textContent = "Show less";
      } else {
        descEl.textContent = fullText.slice(0, 300).trim() + "...";
        btn.textContent = "Read more";
      }
    }

    fetchNWSAlerts();
    setInterval(fetchNWSAlerts, 15 * 60 * 1000);
  </script>
  </body>
</html>
